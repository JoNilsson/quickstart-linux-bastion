AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation template for deploying Linux bastion hosts in an
  auto-scaling group in an existing VPC. (qs-1qup6ra99)
Metadata:
  QuickStartDocumentation:
    EntrypointName: Launch into an existing VPC
    Order: 2
  LICENSE: Apache License, Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - RemoteAccessCIDR
      - Label:
          default: IAM configuration
        Parameters:
          - RolePath
          - PermissionsBoundaryArn
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
          - BastionAMIOS
          - BastionInstanceType
          - RootVolumeSize
      - Label:
          default: Linux bastion configuration
        Parameters:
          - NumBastionHosts
          - BastionHostName
          - BastionTenancy
          - EnableBanner
          - BastionBanner
          - EnableTCPForwarding
          - EnableX11Forwarding
      - Label:
          default: Alternative configurations
        Parameters:
          - AlternativeInitializationScript
          - OSImageOverride
          - AlternativeIAMRole
          - EnvironmentVariables
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      AlternativeIAMRole:
        default: Alternative IAM role
      AlternativeInitializationScript:
        default: Alternative initialization script
      BastionAMIOS:
        default: Bastion AMI operating system
      BastionHostName:
        default: Bastion host Name
      BastionTenancy:
        default: Bastion tenancy
      BastionBanner:
        default: Banner text
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      BastionInstanceType:
        default: Bastion instance type
      EnableBanner:
        default: Bastion banner
      EnableTCPForwarding:
        default: TCP forwarding
      EnableX11Forwarding:
        default: X11 forwarding
      EnvironmentVariables:
        default: Environment variables
      KeyPairName:
        default: Key pair name
      NumBastionHosts:
        default: Number of bastion hosts
      OSImageOverride:
        default: Operating system override
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RemoteAccessCIDR:
        default: Allowed bastion external access CIDR
      VPCID:
        default: VPC ID
      RootVolumeSize:
        default: Root volume size
      PermissionsBoundaryArn:
        default: Permissions boundary ARN
      RolePath:
        default: Role path
Parameters:
  BastionAMIOS:
    Type: String
    Description: The Linux distribution for the AMI to be used for the bastion host instances.
    AllowedValues:
      - Amazon-Linux2-HVM
      - Amazon-Linux2-HVM-ARM
      - CentOS-7-HVM
      - Ubuntu-Server-20.04-LTS-HVM
      - Ubuntu-Server-22.04-LTS-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux2-HVM
  BastionHostName:
    Type: String
    Description: The value used for the name tag of the bastion host.
    Default: LinuxBastion
  BastionBanner:
    Type: String
    Description: Banner text to display upon login.
    Default: ''
  BastionTenancy:
    Type: String
    Description: Bastion VPC tenancy (dedicated or default).
    AllowedValues:
      - dedicated
      - default
    Default: default
  BastionInstanceType:
    Type: String
    Description: Amazon EC2 instance type for the bastion instances.
    Default: t3.micro
  EnableBanner:
    Type: String
    Description: Choose "true" to display a banner when connecting to the bastion using SSH.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableTCPForwarding:
    Type: String
    Description: Choose "true" to enable TCP forwarding.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableX11Forwarding:
    Type: String
    Description: Choose "true" to enable X11 forwarding.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  KeyPairName:
    Type: String
    Description:
      Name of an existing public/private key pair. If you do not have one in this AWS Region,
      please create it before continuing. If left empty, AWS Systems Manager Session Manager can still be used to connect to the instance.
    Default: ''
  NumBastionHosts:
    Type: String
    Description: The number of bastion hosts to create. The maximum number is four.
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
    Default: 1
  PublicSubnet1ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the public subnet 1 that you want to provision the first bastion into (for example, subnet-a0246dcd).
  PublicSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the public subnet 2 that you want to provision the second bastion into (for example, subnet-e3246d8e).
  QSS3BucketName:
    Type: String
    Description: Name of the S3 bucket for your copy of the Quick Start assets.
      Keep the default name unless you are customizing the template.
      Changing the name updates code references to point to a new Quick
      Start location. This name can include numbers, lowercase letters,
      uppercase letters, and hyphens, but do not start or end with a hyphen (-).
      See https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription:
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a
      hyphen (-).
    Default: aws-quickstart
  QSS3BucketRegion:
    Type: String
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Default: us-east-1
  QSS3KeyPrefix:
    Type: String
    Description:
      S3 key prefix that is used to simulate a directory for your copy of the
      Quick Start assets. Keep the default prefix unless you are customizing
      the template. Changing this prefix updates code references to point to
      a new Quick Start location. This prefix can include numbers, lowercase
      letters, uppercase letters, hyphens (-), and forward slashes (/). End with a forward slash.
      See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
      and https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-linux-bastion/
  RemoteAccessCIDR:
    Type: String
    Description: Allowed CIDR block for external SSH access to the bastions.
    AllowedPattern: ^disabled-onlyssmaccess$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be disabled-onlyssmaccess or in the format "x.x.x.x/x".
    Default: disabled-onlyssmaccess
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC (for example, vpc-0343606e).
  AlternativeInitializationScript:
    Type: String
    Description: An alternative initialization script to run during setup.
    AllowedPattern: ^https.*|^$
    ConstraintDescription: URL must begin with https.
    Default: ''
  OSImageOverride:
    Type: String
    Description: The Region-specific image to use for the instance.
    Default: ''
  AlternativeIAMRole:
    Type: String
    Description:
      An existing IAM role name to attach to the bastion. If left blank,
      a new role will be created.
    Default: ''
  EnvironmentVariables:
    Type: String
    Description: A comma-separated list of environment variables for use in
      bootstrapping. Variables must be in the format "key=value". "Value" cannot
      contain commas.
    Default: ''
  RootVolumeSize:
    Type: Number
    Description: The size in GB for the root EBS volume.
    Default: 10
  PermissionsBoundaryArn:
    Type: String
    Description: Will be attached to all created IAM roles to satisfy security requirements.
    Default: ''
  RolePath:
    Type: String
    Description: Will be attached to all created IAM roles to satisfy security requirements.
    Default: ''
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert:
          Fn::EachMemberIn:
            - !ValueOfAll [AWS::EC2::Subnet::Id, VpcId]
            - Fn::RefAll: AWS::EC2::VPC::Id
        AssertDescription: All subnets must exist in the VPC.
  ArmInstance:
    Assertions:
      - Assert: !Contains
          - - t4g.nano
            - t4g.medium
            - t4g.large
            - t4g.micro
            - t4g.small
            - t4g.2xlarge
            - t4g.xlarge
            - m6g.medium
            - m6g.large
            - m6g.xlarge
            - m6g.2xlarge
          - !Ref BastionInstanceType
        AssertDescription: This instance type must use BastionAMIOS type of Amazon-Linux2-HVM-ARM.
    RuleCondition: !Equals
      - !Ref BastionAMIOS
      - Amazon-Linux2-HVM-ARM
Mappings:
  AWSAMIRegionMap:
    af-south-1:
      AMZNLINUX2: ami-0cff8a37cfecca308
      AMZNLINUX2ARM: ami-044bc76e6f507b412
      US2004HVM: ami-06916837b18561a8d
      US2204HVM: ami-0df5b771d6e8bfdf9
      CENTOS7HVM: ami-0e7ff6dec8807b69f
      SLES15SP4HVM: ami-0d18a3d47f33fe55a
    ap-east-1:
      AMZNLINUX2: ami-0d41b14f11c68e677
      AMZNLINUX2ARM: ami-08c1b68639f83d0cb
      US2004HVM: ami-020a3716e49444783
      US2204HVM: ami-079156dd95513514f
      CENTOS7HVM: ami-09f998aa76774295f
      SLES15SP4HVM: ami-06130ce0e5645edc4
    ap-northeast-1:
      AMZNLINUX2: ami-0923d9a4d39b22a91
      AMZNLINUX2ARM: ami-0661694c01306dbc9
      US2004HVM: ami-09bba7f9d4df930e6
      US2204HVM: ami-0e00e89380cb2a63b
      CENTOS7HVM: ami-0fd48c6031f8700df
      SLES15SP4HVM: ami-08d5afff14b78a281
    ap-northeast-2:
      AMZNLINUX2: ami-09282971cf2faa4c9
      AMZNLINUX2ARM: ami-0df7659587273dd64
      US2004HVM: ami-0cceb8e71553d73f0
      US2204HVM: ami-0f8404a7dd892ff25
      CENTOS7HVM: ami-09e2a570cb404b37e
      SLES15SP4HVM: ami-0b8951725398f7575
    ap-northeast-3:
      AMZNLINUX2: ami-039fe1eba495c966f
      AMZNLINUX2ARM: ami-0e35395fb2519262d
      US2004HVM: ami-00e574905abd5d549
      US2204HVM: ami-0d6dbe860474011f3
      CENTOS7HVM: ami-02483871b467662e6
      SLES15SP4HVM: ami-092d15b7f2ef948a1
    ap-south-1:
      AMZNLINUX2: ami-058927a80413afd9e
      AMZNLINUX2ARM: ami-005d492f446757bfe
      US2004HVM: ami-0afe0ab87c09ab68a
      US2204HVM: ami-00ba7822b7cd49515
      CENTOS7HVM: ami-0763cf792771fe1bd
      SLES15SP4HVM: ami-0931494f2532d950d
    ap-southeast-1:
      AMZNLINUX2: ami-04fc979a55e14b094
      AMZNLINUX2ARM: ami-0098dd09f8818784f
      US2004HVM: ami-044ff44217e43f471
      US2204HVM: ami-02cb2a3406ee8cac5
      CENTOS7HVM: ami-00d785f1c099d5a0e
      SLES15SP4HVM: ami-0cc06d620beca2a35
    ap-southeast-2:
      AMZNLINUX2: ami-06ce513624b435a22
      AMZNLINUX2ARM: ami-0ba5f776aee27b918
      US2004HVM: ami-0f4b7f08ad2dc7197
      US2204HVM: ami-0031085f7b66fa348
      CENTOS7HVM: ami-0cf5f53cea16d8cbf
      SLES15SP4HVM: ami-059ea090325af01c0
    ap-southeast-3:
      AMZNLINUX2: ami-0280cd826703b26b9
      AMZNLINUX2ARM: ami-03aeec12c65b34c4c
      US2004HVM: ami-0ab00ab18c3c143a8
      US2204HVM: ami-06e3e2cf345263cfe
      CENTOS7HVM: ami-0dc1b02193df64768
      SLES15SP4HVM: ami-005899737135b4201
    ca-central-1:
      AMZNLINUX2: ami-07625b74039b1a58b
      AMZNLINUX2ARM: ami-04bc32a3660b07a1d
      US2004HVM: ami-0ae1342dd08c9ab53
      US2204HVM: ami-06aaee54f1c7fb715
      CENTOS7HVM: ami-0ca3e32c623d61bdf
      SLES15SP4HVM: ami-0cdd9ddd1a4a73cee
    eu-central-1:
      AMZNLINUX2: ami-056343e91872518f7
      AMZNLINUX2ARM: ami-07920711782de0b25
      US2004HVM: ami-091f21ecba031b39a
      US2204HVM: ami-099245c5effbaf603
      CENTOS7HVM: ami-0b4c74d41ee4bed78
      SLES15SP4HVM: ami-00c80956d89173342
    eu-north-1:
      AMZNLINUX2: ami-0f87066deb1dc51b6
      AMZNLINUX2ARM: ami-048760f9d44e23207
      US2004HVM: ami-00b696228b0185ffe
      US2204HVM: ami-0407a4995711db777
      CENTOS7HVM: ami-08998a9a61da37c77
      SLES15SP4HVM: ami-0296ddf56358a33d1
    eu-south-1:
      AMZNLINUX2: ami-081e7f992eee19465
      AMZNLINUX2ARM: ami-006bf97edd6a6b50c
      US2004HVM: ami-0dfca41f900f5d594
      US2204HVM: ami-01ebc905806ad2635
      CENTOS7HVM: ami-0ce6f8b3dbadf3b41
      SLES15SP4HVM: ami-0ead98c24489d0900
    eu-west-1:
      AMZNLINUX2: ami-0ffea00000f287d30
      AMZNLINUX2ARM: ami-028a9d109dd58a23c
      US2004HVM: ami-0d7f394c51e3e7d3e
      US2204HVM: ami-01dbabda256db26e7
      CENTOS7HVM: ami-0c1f3a8058fde8814
      SLES15SP4HVM: ami-0be8fad2a3296a74f
    eu-west-2:
      AMZNLINUX2: ami-0fbec3e0504ee1970
      AMZNLINUX2ARM: ami-0c9a51a65151dc707
      US2004HVM: ami-0b2537c6147faa3e2
      US2204HVM: ami-033c8ef001424a6d3
      CENTOS7HVM: ami-036e229aa5fa198ba
      SLES15SP4HVM: ami-0ae5ba775e2b57305
    eu-west-3:
      AMZNLINUX2: ami-092c29a186204ba09
      AMZNLINUX2ARM: ami-01815b727d927256f
      US2004HVM: ami-010d0ac8765b626b5
      US2204HVM: ami-0bc607f9bc3cbe5cd
      CENTOS7HVM: ami-0eb3117f2ccc34ba6
      SLES15SP4HVM: ami-05c58114a34dbae09
    me-central-1:
      AMZNLINUX2: ami-0b2373ec0e87325e0
      AMZNLINUX2ARM: ami-079cbefad75e3224d
      US2004HVM: ami-0ddd99e1ef60bf7dd
      US2204HVM: ami-039fa3619add37c03
      CENTOS7HVM: ami-0f3bfe072614fef65
      SLES15SP4HVM: ami-0e58a0202165f87c2
    me-south-1:
      AMZNLINUX2: ami-09a2e6e8686165092
      AMZNLINUX2ARM: ami-0b25be82c969e4f01
      US2004HVM: ami-098b94183f8e74ecc
      US2204HVM: ami-0c9b2924fcd9b73a4
      CENTOS7HVM: ami-03a968cc818f19908
      SLES15SP4HVM: ami-02936910488dbf60a
    sa-east-1:
      AMZNLINUX2: ami-045e7e1eda1ccbe6c
      AMZNLINUX2ARM: ami-05e306425f1cd0c3d
      US2004HVM: ami-0b9517e2052e8be7a
      US2204HVM: ami-0deebba34ef22f5a9
      CENTOS7HVM: ami-04384c010169ed8d3
      SLES15SP4HVM: ami-0964ddd286e7d4a4f
    us-east-1:
      AMZNLINUX2: ami-01cc34ab2709337aa
      AMZNLINUX2ARM: ami-0c582118883b46f4f
      US2004HVM: ami-022d4249382309a48
      US2204HVM: ami-051dcca84f1edfff1
      CENTOS7HVM: ami-002070d43b0a4f171
      SLES15SP4HVM: ami-08e167817c87ed7fd
    us-east-2:
      AMZNLINUX2: ami-0dd0ccab7e2801812
      AMZNLINUX2ARM: ami-0dd41089e5db1efc8
      US2004HVM: ami-0b29b6e62f2343b46
      US2204HVM: ami-0a5e8065e5b04c679
      CENTOS7HVM: ami-05a36e1502605b4aa
      SLES15SP4HVM: ami-013d257c3198b3759
    us-west-1:
      AMZNLINUX2: ami-0019ad94c6124959d
      AMZNLINUX2ARM: ami-0f36e12deb25112d9
      US2004HVM: ami-0a1a90c77c33d81f9
      US2204HVM: ami-04682597beff929bd
      CENTOS7HVM: ami-0dee0f906cf114191
      SLES15SP4HVM: ami-032d5ecad210ed6c8
    us-west-2:
      AMZNLINUX2: ami-07c73ee7f59efbb9a
      AMZNLINUX2ARM: ami-05c53e3ce52089c5c
      US2004HVM: ami-038a0ccaaedae6406
      US2204HVM: ami-0c033eb565588ae0e
      CENTOS7HVM: ami-08c191625cfb7ee61
      SLES15SP4HVM: ami-0bfb58754b8025d15
    us-gov-east-1:
      AMZNLINUX2: ami-0fb652203895964c7
      AMZNLINUX2ARM: ami-d605eea7
      US2004HVM: ami-0f51c77a28ab908f6
      US2204HVM: ami-0f155a9fd28ca549e
      CENTOS7HVM: ami-0c2bbe6caaa14e7df
      # SLES15SP4HVM:
    us-gov-west-1:
      AMZNLINUX2: ami-093236b638585afe2
      AMZNLINUX2ARM: ami-0afe83cfde2dbd7eb
      US2004HVM: ami-066189aeb91baa0ab
      US2204HVM: ami-09e0cb78220c19409
      CENTOS7HVM: ami-010d0f12d80fa611d
      # SLES15SP4HVM:
    cn-north-1:
      AMZNLINUX2: ami-099350c6f8904fe6a
      AMZNLINUX2ARM: ami-0763c41d0feeb66ab
      US2004HVM: ami-04c6706a884b87294
      US2204HVM: ami-0c215c2edc420bc1f
      CENTOS7HVM: ami-0505d4fc4a60e9914
      # SLES15SP4HVM:
    cn-northwest-1:
      AMZNLINUX2: ami-050d3cee094f16bfa
      AMZNLINUX2ARM: ami-04cf4e4969f6fc712
      US2004HVM: ami-0cf88a70611b5da8a
      US2204HVM: ami-01613a9d7c23f704e
      CENTOS7HVM: ami-01cb2ecea35798f3f
      # SLES15SP4HVM:
  LinuxAMINameMap:
    Amazon-Linux2-HVM:
      Code: AMZNLINUX2
      OS: Amazon
    Amazon-Linux2-HVM-ARM:
      Code: AMZNLINUX2ARM
      OS: Amazon
    CentOS-7-HVM:
      Code: CENTOS7HVM
      OS: CentOS
    Ubuntu-Server-20.04-LTS-HVM:
      Code: US2004HVM
      OS: Ubuntu
    Ubuntu-Server-22.04-LTS-HVM:
      Code: US2204HVM
      OS: Ubuntu
    SUSE-SLES-15-HVM:
      Code: SLES15SP4HVM
      OS: SLES
Conditions:
  RolePathProvided: !Not [!Equals ['', !Ref RolePath]]
  PermissionsBoundaryProvided: !Not [!Equals ['', !Ref PermissionsBoundaryArn]]
  2BastionConditionHost: !Or [!Equals [!Ref NumBastionHosts, 2], !Condition 3BastionCondition, !Condition 4BastionCondition]
  3BastionConditionHost: !Or [!Equals [!Ref NumBastionHosts, 3], !Condition 4BastionCondition]
  4BastionConditionHost: !Equals [!Ref NumBastionHosts, 4]
  2BastionCondition: !And [!Condition PopulateRemoteCIDR, !Condition 2BastionConditionHost]
  3BastionCondition: !And [!Condition PopulateRemoteCIDR, !Condition 3BastionConditionHost]
  4BastionCondition: !And [!Condition PopulateRemoteCIDR, !Condition 4BastionConditionHost]
  PopulateRemoteCIDR: !Not [!Equals [!Ref RemoteAccessCIDR, disabled-onlyssmaccess]]
  UseAlternativeInitialization: !Not [!Equals [!Ref AlternativeInitializationScript, '']]
  CreateIAMRole: !Equals [!Ref AlternativeIAMRole, '']
  UseOSImageOverride: !Not [!Equals [!Ref OSImageOverride, '']]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]
  DefaultBanner: !Equals [!Ref BastionBanner, '']
  UseKeyPair: !Not [!Equals [!Ref KeyPairName, '']]
Resources:
  BastionMainLogGroup:
    Type: AWS::Logs::LogGroup
  SSHMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BastionMainLogGroup
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: 1
          MetricNamespace: !Sub AWSQuickStart/${AWS::StackName}
  BastionHostRole:
    Condition: CreateIAMRole
    Type: AWS::IAM::Role
    Properties:
      Path: !If [RolePathProvided, !Ref RolePath, !Ref AWS::NoValue]
      PermissionsBoundary:
        !If [PermissionsBoundaryProvided, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - !Sub ec2.${AWS::URLSuffix}
            Effect: Allow
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy
  BastionHostPolicy:
    Type: AWS::IAM::Policy
    Condition: CreateIAMRole
    Properties:
      PolicyName: BastionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:GetObject
            Resource: !Sub
              - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
            Effect: Allow
          - Action:
              - logs:CreateLogStream
              - logs:GetLogEvents
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutRetentionPolicy
              - logs:PutMetricFilter
              - logs:CreateLogGroup
            Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
            Effect: Allow
          - Action:
              - ec2:DescribeAddresses
            Resource: '*'
            Effect: Allow
          - Effect: Allow
            Action:
              - ec2:AssociateAddress
            Resource: '*'
            Condition:
              StringEquals:
                ec2:ResourceTag/aws:cloudformation:stack-id: !Ref AWS::StackId
      Roles:
        - !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
  BastionHostProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
      Path: !If [CreateIAMRole, /, /account-managed/]
  EIP1:
    Type: AWS::EC2::EIP
    Condition: PopulateRemoteCIDR
    Properties:
      Domain: vpc
  EIP2:
    Type: AWS::EC2::EIP
    Condition: 2BastionCondition
    Properties:
      Domain: vpc
  EIP3:
    Type: AWS::EC2::EIP
    Condition: 3BastionCondition
    Properties:
      Domain: vpc
  EIP4:
    Type: AWS::EC2::EIP
    Condition: 4BastionCondition
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      VPCZoneIdentifier:
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      MinSize: !Ref NumBastionHosts
      MaxSize: !Ref NumBastionHosts
      Cooldown: 900
      DesiredCapacity: !Ref NumBastionHosts
      Tags:
        - Key: Name
          Value: !Ref BastionHostName
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumBastionHosts
        Timeout: PT60M
      AutoScalingCreationPolicy:
        MinSuccessfulInstancesPercent: 100
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
          buckets:
            - !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/auditd.rules:
              mode: 000550
              owner: root
              group: root
              content: |
                -a exit,always -F arch=b64 -S execve
                -a exit,always -F arch=b32 -S execve
            /tmp/auditing_configure.sh:
              source: !Sub
                - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/auditing_configure.sh
                - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                  S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              mode: 000550
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/bastion_bootstrap.sh:
              source: !If
                - UseAlternativeInitialization
                - !Ref AlternativeInitializationScript
                - !Sub
                  - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh
                  - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                    S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              mode: 000550
              owner: root
              group: root
              authentication: S3AccessCreds
          commands:
            a-add_auditd_rules:
              cwd: /tmp/
              env:
                BASTION_OS: !FindInMap [LinuxAMINameMap, !Ref BastionAMIOS, OS]
              command: ./auditing_configure.sh
            b-bootstrap:
              cwd: /tmp/
              env:
                REGION: !Sub ${AWS::Region}
                URL_SUFFIX: !Sub ${AWS::URLSuffix}
                BANNER_REGION: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              command: !Sub
                - ./bastion_bootstrap.sh --banner ${BannerUrl} --enable ${EnableBanner} --tcp-forwarding ${EnableTCPForwarding} --x11-forwarding ${EnableX11Forwarding}
                - BannerUrl: !If
                    - DefaultBanner
                    - !Sub
                      - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/banner_message.txt
                      - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                    - !Ref BastionBanner
    Properties:
      AssociatePublicIpAddress: true
      PlacementTenancy: !Ref BastionTenancy
      KeyName: !If [UseKeyPair, !Ref KeyPairName, !Ref AWS::NoValue]
      IamInstanceProfile: !Ref BastionHostProfile
      ImageId: !If
        - UseOSImageOverride
        - !Ref OSImageOverride
        - !FindInMap [AWSAMIRegionMap, !Ref AWS::Region, !FindInMap [LinuxAMINameMap, !Ref BastionAMIOS, Code]]
      SecurityGroups:
        - !Ref BastionSecurityGroup
      InstanceType: !Ref BastionInstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref RootVolumeSize
            VolumeType: gp2
            Encrypted: true
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash
            set -x
            for e in $(echo "${EnvironmentVariables}" | tr ',' ' '); do
              export $e
              echo "$e" >> /root/.bashrc
            done
            export PATH=$PATH:/usr/local/bin
            #cfn signaling functions
            yum install git unzip wget -y || apt-get install -y git unzip wget || zypper -n install git unzip wget

            cfn_fail() {
              cfn-signal -e 1 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup
              exit 1
            }

            cfn_success() {
              cfn-signal -e 0 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup
              exit 0
            }

            pushd /tmp

            if [[ "a$(which aws)" == "a" ]]
            then
              echo "Installing AWS CLI..."
              uname=$(uname -m)
              wget -nv -O "./awscliv2.zip" "https://awscli.amazonaws.com/awscli-exe-linux-$uname.zip"
              unzip -q ./awscliv2.zip
              ./aws/install
            fi

            until aws s3 cp --no-progress "s3://${S3Bucket}/${QSS3KeyPrefix}scripts/cfn-tools.sh" .
            do
              echo "Retrying..."
            done
            source ./cfn-tools.sh

            popd /tmp

            qs_update-os || qs_err;
            qs_bootstrap_pip || qs_err " pip bootstrap failed ";
            qs_aws-cfn-bootstrap || qs_err " cfn bootstrap failed ";

            EIP_LIST="${EIP1},${EIP2},${EIP3},${EIP4}"
            CLOUDWATCHGROUP=${BastionMainLogGroup}
            cfn-init -v --stack '${AWS::StackName}' --resource BastionLaunchConfiguration --region ${AWS::Region} || cfn_fail
            [ $(qs_status) == 0 ] && cfn_success || cfn_fail
          - EIP1: !If [PopulateRemoteCIDR, !Ref EIP1, 'Null']
            EIP2: !If [2BastionCondition, !Ref EIP2, 'Null']
            EIP3: !If [3BastionCondition, !Ref EIP3, 'Null']
            EIP4: !If [4BastionCondition, !Ref EIP4, 'Null']
            S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        !If
          - PopulateRemoteCIDR
          -
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: !Ref RemoteAccessCIDR
            - IpProtocol: icmp
              FromPort: -1
              ToPort: -1
              CidrIp: !Ref RemoteAccessCIDR
          - !Ref AWS::NoValue
Outputs:
  BastionAutoScalingGroup:
    Description: Auto Scaling group reference ID.
    Value: !Ref BastionAutoScalingGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionAutoScalingGroup
  EIP1:
    Condition: PopulateRemoteCIDR
    Description: Elastic IP 1 for bastion.
    Value: !Ref EIP1
    Export:
      Name: !Sub ${AWS::StackName}-EIP1
  EIP2:
    Condition: 2BastionCondition
    Description: Elastic IP 2 for bastion.
    Value: !Ref EIP2
    Export:
      Name: !Sub ${AWS::StackName}-EIP2
  EIP3:
    Condition: 3BastionCondition
    Description: Elastic IP 3 for bastion.
    Value: !Ref EIP3
    Export:
      Name: !Sub ${AWS::StackName}-EIP3
  EIP4:
    Condition: 4BastionCondition
    Description: Elastic IP 4 for bastion.
    Value: !Ref EIP4
    Export:
      Name: !Sub ${AWS::StackName}-EIP4
  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref BastionMainLogGroup
    Export:
      Name: !Sub ${AWS::StackName}-CloudWatchLogs
  BastionSecurityGroupID:
    Description: Bastion security group ID.
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionSecurityGroupID
  BastionHostRole:
    Description: Bastion IAM role name.
    Value: !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
    Export:
      Name: !Sub ${AWS::StackName}-BastionHostRole
  Postdeployment:
    Description: See the deployment guide for post-deployment steps.
    Value: https://fwd.aws/YqpXk?
