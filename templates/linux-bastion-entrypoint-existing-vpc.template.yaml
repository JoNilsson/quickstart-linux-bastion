AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation template for deploying Linux bastion hosts in an
  auto-scaling group in an existing VPC. (qs-1qup6ra99)
Metadata:
  QuickStartDocumentation:
    EntrypointName: Launch into an existing VPC
    Order: 2
  LICENSE: Apache License, Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - RemoteAccessCIDR
      - Label:
          default: IAM configuration
        Parameters:
          - RolePath
          - PermissionsBoundaryArn
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
          - BastionAMIOS
          - BastionInstanceType
          - RootVolumeSize
      - Label:
          default: Linux bastion configuration
        Parameters:
          - NumBastionHosts
          - BastionHostName
          - BastionTenancy
          - EnableBanner
          - BastionBanner
          - EnableTCPForwarding
          - EnableX11Forwarding
      - Label:
          default: Alternative configurations
        Parameters:
          - AlternativeInitializationScript
          - OSImageOverride
          - AlternativeIAMRole
          - EnvironmentVariables
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      AlternativeIAMRole:
        default: Alternative IAM role
      AlternativeInitializationScript:
        default: Alternative initialization script
      BastionAMIOS:
        default: Bastion AMI operating system
      BastionHostName:
        default: Bastion host Name
      BastionTenancy:
        default: Bastion tenancy
      BastionBanner:
        default: Banner text
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      BastionInstanceType:
        default: Bastion instance type
      EnableBanner:
        default: Bastion banner
      EnableTCPForwarding:
        default: TCP forwarding
      EnableX11Forwarding:
        default: X11 forwarding
      EnvironmentVariables:
        default: Environment variables
      KeyPairName:
        default: Key pair name
      NumBastionHosts:
        default: Number of bastion hosts
      OSImageOverride:
        default: Operating system override
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RemoteAccessCIDR:
        default: Allowed bastion external access CIDR
      VPCID:
        default: VPC ID
      RootVolumeSize:
        default: Root volume size
      PermissionsBoundaryArn:
        default: Permissions boundary ARN
      RolePath:
        default: Role path
Parameters:
  BastionAMIOS:
    Type: String
    Description: The Linux distribution for the AMI to be used for the bastion host instances.
    AllowedValues:
      - Amazon-Linux2-HVM
      - Amazon-Linux2-HVM-ARM
      - CentOS-7-HVM
      - Ubuntu-Server-20.04-LTS-HVM
      - Ubuntu-Server-22.04-LTS-HVM
      - Ubuntu-Server-22.04-LTS-HVM-ARM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux2-HVM
  BastionHostName:
    Type: String
    Description: The value used for the name tag of the bastion host.
    Default: LinuxBastion
  BastionBanner:
    Type: String
    Description: Banner text to display upon login.
    Default: ''
  BastionTenancy:
    Type: String
    Description: Bastion VPC tenancy (dedicated or default).
    AllowedValues:
      - dedicated
      - default
    Default: default
  BastionInstanceType:
    Type: String
    Description: Amazon EC2 instance type for the bastion instances.
    Default: t3.micro
  EnableBanner:
    Type: String
    Description: Choose "true" to display a banner when connecting to the bastion using SSH.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableTCPForwarding:
    Type: String
    Description: Choose "true" to enable TCP forwarding.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableX11Forwarding:
    Type: String
    Description: Choose "true" to enable X11 forwarding.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  KeyPairName:
    Type: String
    Description:
      Name of an existing public/private key pair. If you do not have one in this AWS Region,
      please create it before continuing. If left empty, AWS Systems Manager Session Manager can still be used to connect to the instance.
    Default: ''
  NumBastionHosts:
    Type: String
    Description: The number of bastion hosts to create. The maximum number is four.
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
    Default: 1
  PublicSubnet1ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the public subnet 1 that you want to provision the first bastion into (for example, subnet-a0246dcd).
  PublicSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the public subnet 2 that you want to provision the second bastion into (for example, subnet-e3246d8e).
  QSS3BucketName:
    Type: String
    Description: Name of the S3 bucket for your copy of the Quick Start assets.
      Keep the default name unless you are customizing the template.
      Changing the name updates code references to point to a new Quick
      Start location. This name can include numbers, lowercase letters,
      uppercase letters, and hyphens, but do not start or end with a hyphen (-).
      See https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription:
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a
      hyphen (-).
    Default: aws-quickstart
  QSS3BucketRegion:
    Type: String
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Default: us-east-1
  QSS3KeyPrefix:
    Type: String
    Description:
      S3 key prefix that is used to simulate a directory for your copy of the
      Quick Start assets. Keep the default prefix unless you are customizing
      the template. Changing this prefix updates code references to point to
      a new Quick Start location. This prefix can include numbers, lowercase
      letters, uppercase letters, hyphens (-), and forward slashes (/). End with a forward slash.
      See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
      and https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-linux-bastion/
  RemoteAccessCIDR:
    Type: String
    Description: Allowed CIDR block for external SSH access to the bastions.
    AllowedPattern: ^disabled-onlyssmaccess$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be disabled-onlyssmaccess or in the format "x.x.x.x/x".
    Default: disabled-onlyssmaccess
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC (for example, vpc-0343606e).
  AlternativeInitializationScript:
    Type: String
    Description: An alternative initialization script to run during setup.
    AllowedPattern: ^https.*|^$
    ConstraintDescription: URL must begin with https.
    Default: ''
  OSImageOverride:
    Type: String
    Description: The Region-specific image to use for the instance.
    Default: ''
  AlternativeIAMRole:
    Type: String
    Description:
      An existing IAM role name to attach to the bastion. If left blank,
      a new role will be created.
    Default: ''
  EnvironmentVariables:
    Type: String
    Description: A comma-separated list of environment variables for use in
      bootstrapping. Variables must be in the format "key=value". "Value" cannot
      contain commas.
    Default: ''
  RootVolumeSize:
    Type: Number
    Description: The size in GB for the root EBS volume.
    Default: 10
  PermissionsBoundaryArn:
    Type: String
    Description: Will be attached to all created IAM roles to satisfy security requirements.
    Default: ''
  RolePath:
    Type: String
    Description: Will be attached to all created IAM roles to satisfy security requirements.
    Default: ''
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert:
          Fn::EachMemberIn:
            - !ValueOfAll [AWS::EC2::Subnet::Id, VpcId]
            - Fn::RefAll: AWS::EC2::VPC::Id
        AssertDescription: All subnets must exist in the VPC.
  ArmInstance:
    RuleCondition: !Contains
      - - Amazon-Linux2-HVM-ARM
        - Ubuntu-Server-22.04-LTS-HVM-ARM
      - !Ref BastionAMIOS
    Assertions:
      - Assert: !Contains
        - - t4g.nano
          - t4g.micro
          - t4g.small
          - t4g.medium
          - t4g.large
          - t4g.xlarge
          - t4g.2xlarge
          - m6g.medium
          - m6g.large
          - m6g.xlarge
          - m6g.2xlarge
        - !Ref BastionInstanceType
        AssertDescription: >-
          You selected an ARM AMI operating system, so you must also enter an
          ARM instance type, such as t4g.micro. For additional details, see
          https://aws.amazon.com/ec2/instance-types/.
  X86_64Instance:
    RuleCondition: !Not
      - !Contains
        - - Amazon-Linux2-HVM-ARM
          - Ubuntu-Server-22.04-LTS-HVM-ARM
        - !Ref BastionAMIOS
    Assertions:
      - Assert: !Not
        - !Contains
          - - t4g.nano
            - t4g.micro
            - t4g.small
            - t4g.medium
            - t4g.large
            - t4g.xlarge
            - t4g.2xlarge
            - m6g.medium
            - m6g.large
            - m6g.xlarge
            - m6g.2xlarge
          - !Ref BastionInstanceType
        AssertDescription: >-
          You selected a x86_64 AMI operating system, so you must also enter a
          x86_64 instance type, such as t3.micro. For additional details, see
          https://aws.amazon.com/ec2/instance-types/.
Mappings:
  AWSAMIRegionMap:
    af-south-1:
      AMZNLINUX2: ami-0c4d743431fd7abbf
      AMZNLINUX2ARM: ami-0088d9a368f596bb5
      US2004HVM: ami-028207f8881917f39
      US2204HVM: ami-080bc3824e96f9b8d
      US2204HVMARM: ami-06ef8344b79e6af19
      CENTOS7HVM: ami-0e7ff6dec8807b69f
      SLES15SP4HVM: ami-0b182a175a9344329
    ap-east-1:
      AMZNLINUX2: ami-05c09d1d8105ee02e
      AMZNLINUX2ARM: ami-0372847b10ad85291
      US2004HVM: ami-0b981d9ee99b28eba
      US2204HVM: ami-0ecb6d8435affe2b6
      US2204HVMARM: ami-04cb5fc457edb28ec
      CENTOS7HVM: ami-09f998aa76774295f
      SLES15SP4HVM: ami-06130ce0e5645edc4
    ap-northeast-1:
      AMZNLINUX2: ami-02d36247c5bc58c23
      AMZNLINUX2ARM: ami-03888b30ba5826eed
      US2004HVM: ami-0af87654f2f8a8b78
      US2204HVM: ami-081ce1b631be2b337
      US2204HVMARM: ami-08df8bc7b568bf11d
      CENTOS7HVM: ami-0fd48c6031f8700df
      SLES15SP4HVM: ami-08d5afff14b78a281
    ap-northeast-2:
      AMZNLINUX2: ami-0eb7a369386789460
      AMZNLINUX2ARM: ami-07071aa2caa3d64c8
      US2004HVM: ami-0f8b8babb98cc66d0
      US2204HVM: ami-05b9c9c0fe2f5a62c
      US2204HVMARM: ami-04c65fa50a4122444
      CENTOS7HVM: ami-09e2a570cb404b37e
      SLES15SP4HVM: ami-0b8951725398f7575
    ap-northeast-3:
      AMZNLINUX2: ami-048b05baffa30bd5f
      AMZNLINUX2ARM: ami-0f64af43106eecb59
      US2004HVM: ami-029ae728cd655b533
      US2204HVM: ami-0fa94f39b906bd429
      US2204HVMARM: ami-06bb0aa85389bea81
      CENTOS7HVM: ami-02483871b467662e6
      SLES15SP4HVM: ami-044bb1b8d85d630a7
    ap-south-1:
      AMZNLINUX2: ami-064687fa05edcd686
      AMZNLINUX2ARM: ami-0614f8971491dffbd
      US2004HVM: ami-0a5b602444b05877e
      US2204HVM: ami-068257025f72f470d
      US2204HVMARM: ami-0b468cf6b5a2c3745
      CENTOS7HVM: ami-0763cf792771fe1bd
      SLES15SP4HVM: ami-03aa8cb259123c505
    ap-southeast-1:
      AMZNLINUX2: ami-0e8e39877665a7c92
      AMZNLINUX2ARM: ami-049f1d4d5acf4bad8
      US2004HVM: ami-0eaf04122a1ae7b3b
      US2204HVM: ami-02ee763250491e04a
      US2204HVMARM: ami-098579a2808e8ddac
      CENTOS7HVM: ami-00d785f1c099d5a0e
      SLES15SP4HVM: ami-01ae98b95555d6f5d
    ap-southeast-2:
      AMZNLINUX2: ami-0d2fb06f3c1484132
      AMZNLINUX2ARM: ami-0dff18538ee15dd27
      US2004HVM: ami-08f7fc611e4646855
      US2204HVM: ami-09a5c873bc79530d9
      US2204HVMARM: ami-089af3b675897e7ef
      CENTOS7HVM: ami-0cf5f53cea16d8cbf
      SLES15SP4HVM: ami-03790de3a37ba87cc
    ap-southeast-3:
      AMZNLINUX2: ami-060edf23d8df73cc8
      AMZNLINUX2ARM: ami-0fa0405f31f5fc05b
      US2004HVM: ami-0b8cf521c3f4ecad8
      US2204HVM: ami-0a7d0f34566ce9a9a
      US2204HVMARM: ami-0a4fbbe826a96c187
      CENTOS7HVM: ami-0dc1b02193df64768
      SLES15SP4HVM: ami-01075fd3a01c91824
    ca-central-1:
      AMZNLINUX2: ami-0cfc8f6b6d827ff08
      AMZNLINUX2ARM: ami-0687cfe4923f5f229
      US2004HVM: ami-03ed048435101372f
      US2204HVM: ami-0fb99f22ad0184043
      US2204HVMARM: ami-0f1e6dafdb1de0761
      CENTOS7HVM: ami-0ca3e32c623d61bdf
      SLES15SP4HVM: ami-04d0ed5d3fd5e05a8
    eu-central-1:
      AMZNLINUX2: ami-00f22f6155d6d92c5
      AMZNLINUX2ARM: ami-0d772c8a73f9b1923
      US2004HVM: ami-0a875db8a031a9efb
      US2204HVM: ami-0caef02b518350c8b
      US2204HVMARM: ami-0641bed8c0ce71686
      CENTOS7HVM: ami-0b4c74d41ee4bed78
      SLES15SP4HVM: ami-001a77181c22a52ba
    eu-north-1:
      AMZNLINUX2: ami-03b26f0b11774cf30
      AMZNLINUX2ARM: ami-0ac381499d9f2404b
      US2004HVM: ami-062488ab9ead28259
      US2204HVM: ami-0852b274a4f812259
      US2204HVMARM: ami-08ead8f3135c7f665
      CENTOS7HVM: ami-08998a9a61da37c77
      SLES15SP4HVM: ami-0c61d9bf4e84dd26a
    eu-south-1:
      AMZNLINUX2: ami-09e1a48112c81cec6
      AMZNLINUX2ARM: ami-0948a331ab6aedb3b
      US2004HVM: ami-0da1c7edc984ae450
      US2204HVM: ami-07e67c061ef6a3779
      US2204HVMARM: ami-0ea80cfe12bdc2926
      CENTOS7HVM: ami-0ce6f8b3dbadf3b41
      SLES15SP4HVM: ami-0324f5c2cb963f12b
    eu-west-1:
      AMZNLINUX2: ami-0ce1e3f77cd41957e
      AMZNLINUX2ARM: ami-018e343775002ae59
      US2004HVM: ami-0c1aea1d6f3bdd76b
      US2204HVM: ami-0c0aa81a5fab62093
      US2204HVMARM: ami-0a359adcdbc93673e
      CENTOS7HVM: ami-0c1f3a8058fde8814
      SLES15SP4HVM: ami-0be8fad2a3296a74f
    eu-west-2:
      AMZNLINUX2: ami-001c1821bbfc6dfd5
      AMZNLINUX2ARM: ami-033aa51347f0f33d8
      US2004HVM: ami-0cbd3ff0171edf4c4
      US2204HVM: ami-033c8ef001424a6d3
      US2204HVMARM: ami-086ab28c6a6ecdbd7
      CENTOS7HVM: ami-036e229aa5fa198ba
      SLES15SP4HVM: ami-0ae5ba775e2b57305
    eu-west-3:
      AMZNLINUX2: ami-072056ff9d3689e7b
      AMZNLINUX2ARM: ami-0963a97df4f645aa0
      US2004HVM: ami-002b18014084a58f7
      US2204HVM: ami-00952d073cecd1d1f
      US2204HVMARM: ami-08af63fb2564d106f
      CENTOS7HVM: ami-0eb3117f2ccc34ba6
      SLES15SP4HVM: ami-05c58114a34dbae09
    me-central-1:
      AMZNLINUX2: ami-0a770253fc75ffb34
      AMZNLINUX2ARM: ami-0586e7a7f9f84353a
      US2004HVM: ami-0ec4a9c4fb268d9d8
      US2204HVM: ami-0b176a61215978ae7
      US2204HVMARM: ami-059ccd326f437bdd7
      CENTOS7HVM: ami-0f3bfe072614fef65
      SLES15SP4HVM: ami-0e58a0202165f87c2
    me-south-1:
      AMZNLINUX2: ami-00374a4f064f79cae
      AMZNLINUX2ARM: ami-01f37d5d6bdaa5b1b
      US2004HVM: ami-05a3d520f37b54e25
      US2204HVM: ami-03de2671163dff759
      US2204HVMARM: ami-00dafdc4666388a3
      CENTOS7HVM: ami-03a968cc818f19908
      SLES15SP4HVM: ami-0cb731bd07edfbcc4
    sa-east-1:
      AMZNLINUX2: ami-0e41adb6f66146d4f
      AMZNLINUX2ARM: ami-096cd58c3fc542241
      US2004HVM: ami-05572d2849beb8330
      US2204HVM: ami-0deebba34ef22f5a9
      US2204HVMARM: ami-07e1e26b11a904079
      CENTOS7HVM: ami-04384c010169ed8d3
      SLES15SP4HVM: ami-0a8e14c344b199257
    us-east-1:
      AMZNLINUX2: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}'
      AMZNLINUX2ARM: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2}}'
      US2004HVM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}'
      US2204HVM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}'
      US2204HVMARM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/arm64/hvm/ebs-gp2/ami-id}}'
      CENTOS7HVM: ami-002070d43b0a4f171
      SLES15SP4HVM: ami-08e167817c87ed7fd
    us-east-2:
      AMZNLINUX2: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}'
      AMZNLINUX2ARM: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2}}'
      US2004HVM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}'
      US2204HVM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}'
      US2204HVMARM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/arm64/hvm/ebs-gp2/ami-id}}'
      CENTOS7HVM: ami-05a36e1502605b4aa
      SLES15SP4HVM: ami-0535d9b70179f9734
    us-west-1:
      AMZNLINUX2: ami-029d71bf8ac93a007
      AMZNLINUX2ARM: ami-00872c48515f06ba0
      US2004HVM: ami-0b8dfd94ec1c80cd5
      US2204HVM: ami-0d02a9285176ca8a8
      US2204HVMARM: ami-0aac92f9fb62794dc
      CENTOS7HVM: ami-0dee0f906cf114191
      SLES15SP4HVM: ami-0d36c27f11154fad6
    us-west-2:
      AMZNLINUX2: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}'
      AMZNLINUX2ARM: '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-arm64-gp2}}'
      US2004HVM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/20.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}'
      US2204HVM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/amd64/hvm/ebs-gp2/ami-id}}'
      US2204HVMARM: '{{resolve:ssm:/aws/service/canonical/ubuntu/server/22.04/stable/current/arm64/hvm/ebs-gp2/ami-id}}'
      CENTOS7HVM: ami-08c191625cfb7ee61
      SLES15SP4HVM: ami-0bfb58754b8025d15
    us-gov-east-1:
      AMZNLINUX2: ami-03dce36866ec508f5
      AMZNLINUX2ARM: ami-0b447912d3ca3271c
      US2004HVM: ami-0e54ab9730eacf59c
      US2204HVM: ami-02715d3e836877098
      US2204HVMARM: ami-0dbcf7fc866b67aed
      CENTOS7HVM: ami-00c6b007ba906a530
      # SLES15SP4HVM:
    us-gov-west-1:
      AMZNLINUX2: ami-084a90132ed03eff9
      AMZNLINUX2ARM: ami-0fdc216bdfd5b7908
      US2004HVM: ami-06bb91bded3536e72
      US2204HVM: ami-09e0cb78220c19409
      US2204HVMARM: ami-0b49c8153b5b39e72
      CENTOS7HVM: ami-08b470dba6016d395
      # SLES15SP4HVM:
    cn-north-1:
      AMZNLINUX2: ami-0f013d34a0b511e5c
      AMZNLINUX2ARM: ami-0fabc2ef286ed7b51
      US2004HVM: ami-03611de1cc73ded5d
      US2204HVM: ami-066463ec4673de53b
      US2204HVMARM: ami-05895291a3b349a2f
      CENTOS7HVM: ami-0860d3f26ee044bb9
      # SLES15SP4HVM:
    cn-northwest-1:
      AMZNLINUX2: ami-0264a841e816c29ba
      AMZNLINUX2ARM: ami-048d2b8d39e4755e5
      US2004HVM: ami-01c4a9e119a03055d
      US2204HVM: ami-020ce060d4778563b
      US2204HVMARM: ami-0390636708632f19a
      CENTOS7HVM: ami-01cac994948aca880
      # SLES15SP4HVM:
  LinuxAMINameMap:
    Amazon-Linux2-HVM:
      Code: AMZNLINUX2
      OS: Amazon
    Amazon-Linux2-HVM-ARM:
      Code: AMZNLINUX2ARM
      OS: Amazon
    CentOS-7-HVM:
      Code: CENTOS7HVM
      OS: CentOS
    Ubuntu-Server-20.04-LTS-HVM:
      Code: US2004HVM
      OS: Ubuntu
    Ubuntu-Server-22.04-LTS-HVM:
      Code: US2204HVM
      OS: Ubuntu
    Ubuntu-Server-22.04-LTS-HVM-ARM:
      Code: US2204HVMARM
      OS: Ubuntu
    SUSE-SLES-15-HVM:
      Code: SLES15SP4HVM
      OS: SLES
Conditions:
  RolePathProvided: !Not [!Equals ['', !Ref RolePath]]
  PermissionsBoundaryProvided: !Not [!Equals ['', !Ref PermissionsBoundaryArn]]
  2BastionConditionHost: !Or [!Equals [!Ref NumBastionHosts, 2], !Condition 3BastionCondition, !Condition 4BastionCondition]
  3BastionConditionHost: !Or [!Equals [!Ref NumBastionHosts, 3], !Condition 4BastionCondition]
  4BastionConditionHost: !Equals [!Ref NumBastionHosts, 4]
  2BastionCondition: !And [!Condition HasRemoteCIDR, !Condition 2BastionConditionHost]
  3BastionCondition: !And [!Condition HasRemoteCIDR, !Condition 3BastionConditionHost]
  4BastionCondition: !And [!Condition HasRemoteCIDR, !Condition 4BastionConditionHost]
  HasRemoteCIDR: !Not [!Equals [!Ref RemoteAccessCIDR, disabled-onlyssmaccess]]
  UseAlternativeInitialization: !Not [!Equals [!Ref AlternativeInitializationScript, '']]
  CreateIAMRole: !Equals [!Ref AlternativeIAMRole, '']
  UseOSImageOverride: !Not [!Equals [!Ref OSImageOverride, '']]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]
  DefaultBanner: !Equals [!Ref BastionBanner, '']
  UseKeyPair: !Not [!Equals [!Ref KeyPairName, '']]
Resources:
  BastionMainLogGroup:
    Type: AWS::Logs::LogGroup
  SSHMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BastionMainLogGroup
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: 1
          MetricNamespace: !Sub AWSQuickStart/${AWS::StackName}
  BastionHostRole:
    Condition: CreateIAMRole
    Type: AWS::IAM::Role
    Properties:
      Path: !If [RolePathProvided, !Ref RolePath, !Ref AWS::NoValue]
      PermissionsBoundary:
        !If [PermissionsBoundaryProvided, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - !Sub ec2.${AWS::URLSuffix}
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy
  BastionHostPolicy:
    Type: AWS::IAM::Policy
    Condition: CreateIAMRole
    Properties:
      PolicyName: BastionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ListQSS3BucketObjects
            Effect: Allow
            Action: s3:ListBucket
            Resource: !Sub
              - arn:${AWS::Partition}:s3:::${S3Bucket}
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
          - Sid: GetQSS3Objects
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource: !Sub
              - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
          - Sid: WriteToCloudWatchLogs
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:GetLogEvents
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutRetentionPolicy
              - logs:PutMetricFilter
              - logs:CreateLogGroup
            Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
          - Sid: Global
            Effect: Allow
            Action:
              - ec2:DescribeAddresses
            Resource: '*'
          - Sid: AssociateStackEips
            Effect: Allow
            Action:
              - ec2:AssociateAddress
            Resource: '*'
            Condition:
              StringEquals:
                ec2:ResourceTag/aws:cloudformation:stack-id: !Ref AWS::StackId
      Roles:
        - !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
  BastionHostProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
      Path: !If [CreateIAMRole, /, /account-managed/]
  EIP1:
    Type: AWS::EC2::EIP
    Condition: HasRemoteCIDR
    Properties:
      Domain: vpc
  EIP2:
    Type: AWS::EC2::EIP
    Condition: 2BastionCondition
    Properties:
      Domain: vpc
  EIP3:
    Type: AWS::EC2::EIP
    Condition: 3BastionCondition
    Properties:
      Domain: vpc
  EIP4:
    Type: AWS::EC2::EIP
    Condition: 4BastionCondition
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      VPCZoneIdentifier:
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      MinSize: !Ref NumBastionHosts
      MaxSize: !Ref NumBastionHosts
      Cooldown: 900
      DesiredCapacity: !Ref NumBastionHosts
      Tags:
        - Key: Name
          Value: !Ref BastionHostName
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumBastionHosts
        Timeout: PT60M
      AutoScalingCreationPolicy:
        MinSuccessfulInstancesPercent: 100
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
          buckets:
            - !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/auditd.rules:
              mode: 000550
              owner: root
              group: root
              content: |
                -a exit,always -F arch=b64 -S execve
                -a exit,always -F arch=b32 -S execve
            /tmp/auditing_configure.sh:
              source: !Sub
                - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/auditing_configure.sh
                - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                  S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              mode: 000550
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/bastion_bootstrap.sh:
              source: !If
                - UseAlternativeInitialization
                - !Ref AlternativeInitializationScript
                - !Sub
                  - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh
                  - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                    S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              mode: 000550
              owner: root
              group: root
              authentication: S3AccessCreds
          commands:
            a-add_auditd_rules:
              cwd: /tmp/
              env:
                BASTION_OS: !FindInMap [LinuxAMINameMap, !Ref BastionAMIOS, OS]
              command: ./auditing_configure.sh
            b-bootstrap:
              cwd: /tmp/
              env:
                REGION: !Sub ${AWS::Region}
                URL_SUFFIX: !Sub ${AWS::URLSuffix}
                BANNER_REGION: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              command: !Sub
                - ./bastion_bootstrap.sh --banner ${BannerUrl} --enable ${EnableBanner} --tcp-forwarding ${EnableTCPForwarding} --x11-forwarding ${EnableX11Forwarding}
                - BannerUrl: !If
                    - DefaultBanner
                    - !Sub
                      - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/banner_message.txt
                      - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                    - !Ref BastionBanner
    Properties:
      AssociatePublicIpAddress: true
      PlacementTenancy: !Ref BastionTenancy
      KeyName: !If [UseKeyPair, !Ref KeyPairName, !Ref AWS::NoValue]
      IamInstanceProfile: !Ref BastionHostProfile
      ImageId: !If
        - UseOSImageOverride
        - !Ref OSImageOverride
        - !FindInMap [AWSAMIRegionMap, !Ref AWS::Region, !FindInMap [LinuxAMINameMap, !Ref BastionAMIOS, Code]]
      SecurityGroups:
        - !Ref BastionSecurityGroup
      InstanceType: !Ref BastionInstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref RootVolumeSize
            VolumeType: gp2
            Encrypted: true
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub
          - |
            #!/usr/bin/env bash
            set -x
            for e in $(echo "${EnvironmentVariables}" | tr ',' ' '); do
              export $e
              echo "$e" >> /root/.bashrc
            done
            export PATH=$PATH:/usr/local/bin
            yum install -y git unzip wget curl || apt-get install -y git unzip wget curl || zypper -n install git unzip wget curl

            #cfn signaling functions
            cfn_fail() {
              cfn-signal -e 1 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup
              exit 1
            }

            cfn_success() {
              cfn-signal -e 0 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup
              exit 0
            }

            pushd /tmp

            if [[ "a$(which aws)" == "a" ]]
            then
              echo "Installing AWS CLI..."
              uname=$(uname -m)
              wget -nv -O "./awscliv2.zip" "https://awscli.amazonaws.com/awscli-exe-linux-$uname.zip"
              unzip -q ./awscliv2.zip
              ./aws/install
            fi

            until aws s3 cp --no-progress --region ${AWS::Region} "s3://${S3Bucket}/${QSS3KeyPrefix}scripts/cfn-tools.sh" .
            do
              echo "Retrying..."
            done
            source ./cfn-tools.sh

            popd /tmp

            qs_update-os || qs_err;
            qs_bootstrap_pip || qs_err " pip bootstrap failed ";
            qs_aws-cfn-bootstrap || qs_err " cfn bootstrap failed ";

            EIP_LIST="${EIP1},${EIP2},${EIP3},${EIP4}"
            CLOUDWATCHGROUP=${BastionMainLogGroup}
            cfn-init -v --stack '${AWS::StackName}' --resource BastionLaunchConfiguration --region ${AWS::Region} || cfn_fail
            [ $(qs_status) == 0 ] && cfn_success || cfn_fail
          - EIP1: !If [HasRemoteCIDR, !Ref EIP1, 'Null']
            EIP2: !If [2BastionCondition, !Ref EIP2, 'Null']
            EIP3: !If [3BastionCondition, !Ref EIP3, 'Null']
            EIP4: !If [4BastionCondition, !Ref EIP4, 'Null']
            S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        !If
          - HasRemoteCIDR
          - - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: !Ref RemoteAccessCIDR
            - IpProtocol: icmp
              FromPort: -1
              ToPort: -1
              CidrIp: !Ref RemoteAccessCIDR
          - !Ref AWS::NoValue
Outputs:
  BastionAutoScalingGroup:
    Description: Auto Scaling group reference ID.
    Value: !Ref BastionAutoScalingGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionAutoScalingGroup
  EIP1:
    Condition: HasRemoteCIDR
    Description: Elastic IP 1 for bastion.
    Value: !Ref EIP1
    Export:
      Name: !Sub ${AWS::StackName}-EIP1
  EIP2:
    Condition: 2BastionCondition
    Description: Elastic IP 2 for bastion.
    Value: !Ref EIP2
    Export:
      Name: !Sub ${AWS::StackName}-EIP2
  EIP3:
    Condition: 3BastionCondition
    Description: Elastic IP 3 for bastion.
    Value: !Ref EIP3
    Export:
      Name: !Sub ${AWS::StackName}-EIP3
  EIP4:
    Condition: 4BastionCondition
    Description: Elastic IP 4 for bastion.
    Value: !Ref EIP4
    Export:
      Name: !Sub ${AWS::StackName}-EIP4
  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref BastionMainLogGroup
    Export:
      Name: !Sub ${AWS::StackName}-CloudWatchLogs
  BastionSecurityGroupID:
    Description: Bastion security group ID.
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionSecurityGroupID
  BastionHostRole:
    Description: Bastion IAM role name.
    Value: !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
    Export:
      Name: !Sub ${AWS::StackName}-BastionHostRole
  Postdeployment:
    Description: See the deployment guide for post-deployment steps.
    Value: https://fwd.aws/YqpXk?
