AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation template for deploying Linux bastion hosts in an
  auto-scaling group in an existing VPC. (qs-1qup6ra99)
Metadata:
  QuickStartDocumentation:
    EntrypointName: Launch into an existing VPC
    Order: 2
  LICENSE: Apache License, Version 2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - RemoteAccessCIDR
      - Label:
          default: IAM configuration
        Parameters:
          - RolePath
          - PermissionsBoundaryArn
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
          - BastionAMIOS
          - BastionInstanceType
          - RootVolumeSize
      - Label:
          default: Linux bastion configuration
        Parameters:
          - NumBastionHosts
          - BastionHostName
          - BastionTenancy
          - EnableBanner
          - BastionBanner
          - EnableTCPForwarding
          - EnableX11Forwarding
      - Label:
          default: Alternative configurations
        Parameters:
          - AlternativeInitializationScript
          - OSImageOverride
          - AlternativeIAMRole
          - EnvironmentVariables
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      AlternativeIAMRole:
        default: Alternative IAM role
      AlternativeInitializationScript:
        default: Alternative initialization script
      BastionAMIOS:
        default: Bastion AMI operating system
      BastionHostName:
        default: Bastion host Name
      BastionTenancy:
        default: Bastion tenancy
      BastionBanner:
        default: Banner text
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      BastionInstanceType:
        default: Bastion instance type
      EnableBanner:
        default: Bastion banner
      EnableTCPForwarding:
        default: TCP forwarding
      EnableX11Forwarding:
        default: X11 forwarding
      EnvironmentVariables:
        default: Environment variables
      KeyPairName:
        default: Key pair name
      NumBastionHosts:
        default: Number of bastion hosts
      OSImageOverride:
        default: Operating system override
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      RemoteAccessCIDR:
        default: Allowed bastion external access CIDR
      VPCID:
        default: VPC ID
      RootVolumeSize:
        default: Root volume size
      PermissionsBoundaryArn:
        default: Permissions boundary ARN
      RolePath:
        default: Role path
Parameters:
  BastionAMIOS:
    Type: String
    Description: The Linux distribution for the AMI to be used for the bastion host instances.
    AllowedValues:
      - Amazon-Linux2-HVM
      - Amazon-Linux2-HVM-ARM
      - CentOS-7-HVM
      - Ubuntu-Server-20.04-LTS-HVM
      - Ubuntu-Server-22.04-LTS-HVM
      - SUSE-SLES-15-HVM
    Default: Amazon-Linux2-HVM
  BastionHostName:
    Type: String
    Description: The value used for the name tag of the bastion host.
    Default: LinuxBastion
  BastionBanner:
    Type: String
    Description: Banner text to display upon login.
    Default: ''
  BastionTenancy:
    Type: String
    Description: Bastion VPC tenancy (dedicated or default).
    AllowedValues:
      - dedicated
      - default
    Default: default
  BastionInstanceType:
    Type: String
    Description: Amazon EC2 instance type for the bastion instances.
    Default: t2.micro
  EnableBanner:
    Type: String
    Description: Choose "true" to display a banner when connecting to the bastion using SSH.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableTCPForwarding:
    Type: String
    Description: Choose "true" to enable TCP forwarding.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  EnableX11Forwarding:
    Type: String
    Description: Choose "true" to enable X11 forwarding.
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
  KeyPairName:
    Type: String
    Description:
      Name of an existing public/private key pair. If you do not have one in this AWS Region,
      please create it before continuing. If left empty, AWS Systems Manager Session Manager can still be used to connect to the instance.
    Default: ''
  NumBastionHosts:
    Type: String
    Description: The number of bastion hosts to create. The maximum number is four.
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
    Default: 1
  PublicSubnet1ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the public subnet 1 that you want to provision the first bastion into (for example, subnet-a0246dcd).
  PublicSubnet2ID:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the public subnet 2 that you want to provision the second bastion into (for example, subnet-e3246d8e).
  QSS3BucketName:
    Type: String
    Description: Name of the S3 bucket for your copy of the Quick Start assets.
      Keep the default name unless you are customizing the template.
      Changing the name updates code references to point to a new Quick
      Start location. This name can include numbers, lowercase letters,
      uppercase letters, and hyphens, but do not start or end with a hyphen (-).
      See https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription:
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a
      hyphen (-).
    Default: aws-quickstart
  QSS3BucketRegion:
    Type: String
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Default: us-east-1
  QSS3KeyPrefix:
    Type: String
    Description:
      S3 key prefix that is used to simulate a directory for your copy of the
      Quick Start assets. Keep the default prefix unless you are customizing
      the template. Changing this prefix updates code references to point to
      a new Quick Start location. This prefix can include numbers, lowercase
      letters, uppercase letters, hyphens (-), and forward slashes (/). End with a forward slash.
      See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
      and https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-linux-bastion/
  RemoteAccessCIDR:
    Type: String
    Description: Allowed CIDR block for external SSH access to the bastions.
    AllowedPattern: ^disabled-onlyssmaccess$|^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be disabled-onlyssmaccess or in the format "x.x.x.x/x".
    Default: disabled-onlyssmaccess
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC (for example, vpc-0343606e).
  AlternativeInitializationScript:
    Type: String
    Description: An alternative initialization script to run during setup.
    AllowedPattern: ^https.*|^$
    ConstraintDescription: URL must begin with https.
    Default: ''
  OSImageOverride:
    Type: String
    Description: The Region-specific image to use for the instance.
    Default: ''
  AlternativeIAMRole:
    Type: String
    Description:
      An existing IAM role name to attach to the bastion. If left blank,
      a new role will be created.
    Default: ''
  EnvironmentVariables:
    Type: String
    Description: A comma-separated list of environment variables for use in
      bootstrapping. Variables must be in the format "key=value". "Value" cannot
      contain commas.
    Default: ''
  RootVolumeSize:
    Type: Number
    Description: The size in GB for the root EBS volume.
    Default: 10
  PermissionsBoundaryArn:
    Type: String
    Description: Will be attached to all created IAM roles to satisfy security requirements.
    Default: ''
  RolePath:
    Type: String
    Description: Will be attached to all created IAM roles to satisfy security requirements.
    Default: ''
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert:
          Fn::EachMemberIn:
            - !ValueOfAll [AWS::EC2::Subnet::Id, VpcId]
            - Fn::RefAll: AWS::EC2::VPC::Id
        AssertDescription: All subnets must exist in the VPC.
  ArmInstance:
    Assertions:
      - Assert: !Contains
          - - t4g.nano
            - t4g.medium
            - t4g.large
            - t4g.micro
            - t4g.small
            - t4g.2xlarge
            - t4g.xlarge
            - m6g.medium
            - m6g.large
            - m6g.xlarge
            - m6g.2xlarge
          - !Ref BastionInstanceType
        AssertDescription: This instance type must use BastionAMIOS type of Amazon-Linux2-HVM-ARM.
    RuleCondition: !Equals
      - !Ref BastionAMIOS
      - Amazon-Linux2-HVM-ARM
Mappings:
  AWSAMIRegionMap:
    af-south-1:
      AMZNLINUX2: ami-0c8f4401bffbcc52b
      AMZNLINUX2ARM: ami-0b9379599770b8b9d
      US2004HVM: ami-06916837b18561a8d
      US2204HVM: ami-03ecd98a27c1f4087
      CENTOS7HVM: ami-0e7ff6dec8807b69f
      SLES15HVM: ami-0b182a175a9344329
    ap-east-1:
      AMZNLINUX2: ami-0481a59051168daa6
      AMZNLINUX2ARM: ami-0661bf36099e1b87f
      US2004HVM: ami-0a27b67a2d7174b09
      US2204HVM: ami-0596fbc9bc165e0a6
      CENTOS7HVM: ami-09f998aa76774295f
      SLES15HVM: ami-0ca7ed1fd25821f56
    ap-northeast-1:
      AMZNLINUX2: ami-01154243795368525
      AMZNLINUX2ARM: ami-038e1f7da7f188eca
      US2004HVM: ami-01e59534b63c89288
      US2204HVM: ami-0b64a13ca42f69187
      CENTOS7HVM: ami-0fd48c6031f8700df
      SLES15HVM: ami-08d5afff14b78a281
    ap-northeast-2:
      AMZNLINUX2: ami-0bb19571ca7f4bf31
      AMZNLINUX2ARM: ami-0c346a80920d424cc
      US2004HVM: ami-0b9954ae1a8f15194
      US2204HVM: ami-025dc74c3d96ebf57
      CENTOS7HVM: ami-09e2a570cb404b37e
      SLES15HVM: ami-0fe8ef15442bbbacb
    ap-northeast-3:
      AMZNLINUX2: ami-071e62426740a4919
      AMZNLINUX2ARM: ami-0599a1b902186e0af
      US2004HVM: ami-0907762ad907ea783
      US2204HVM: ami-0d1fdff91da68b01c
      CENTOS7HVM: ami-02483871b467662e6
      SLES15HVM: ami-0bb84400e7507097c
    ap-south-1:
      AMZNLINUX2: ami-064687fa05edcd686
      AMZNLINUX2ARM: ami-0c652115073e2f397
      US2004HVM: ami-0bba4b75264ecbfbd
      US2204HVM: ami-00c7878b181453e4d
      CENTOS7HVM: ami-0763cf792771fe1bd
      SLES15HVM: ami-0931494f2532d950d
    ap-southeast-1:
      AMZNLINUX2: ami-08326d8b49f61f528
      AMZNLINUX2ARM: ami-092a9edb99da56077
      US2004HVM: ami-0d8ecbcaa8e1f40a2
      US2204HVM: ami-054e3ff0063ada900
      CENTOS7HVM: ami-00d785f1c099d5a0e
      SLES15HVM: ami-0cc06d620beca2a35
    ap-southeast-2:
      AMZNLINUX2: ami-00aa03f67b64f75dd
      AMZNLINUX2ARM: ami-09cf60dc4c078303c
      US2004HVM: ami-09efb16dee606ebee
      US2204HVM: ami-01b9b653b6a6f9385
      CENTOS7HVM: ami-0cf5f53cea16d8cbf
      SLES15HVM: ami-03790de3a37ba87cc
    ap-southeast-3:
      AMZNLINUX2: ami-013da7ea7023d5f7c
      # AMZNLINUX2ARM:
      US2004HVM: ami-016116f6c63123864
      US2204HVM: ami-0a7d0f34566ce9a9a
      CENTOS7HVM: ami-0dc1b02193df64768
      SLES15HVM: ami-005899737135b4201
    ca-central-1:
      AMZNLINUX2: ami-0d681e46bfc23b29c
      AMZNLINUX2ARM: ami-0de7c82ed33169d5a
      US2004HVM: ami-0d7d583e685ceb682
      US2204HVM: ami-062b886c79ad2cb1c
      CENTOS7HVM: ami-0ca3e32c623d61bdf
      SLES15HVM: ami-054bc3c58e249d26f
    eu-central-1:
      AMZNLINUX2: ami-08658d5197becde34
      AMZNLINUX2ARM: ami-0aac4d36ec040d2c1
      US2004HVM: ami-0b1077098d8cb5431
      US2204HVM: ami-0a750371997a814a7
      CENTOS7HVM: ami-0b4c74d41ee4bed78
      SLES15HVM: ami-00c80956d89173342
    eu-north-1:
      AMZNLINUX2: ami-05807b6ca4228ed22
      AMZNLINUX2ARM: ami-0c79859ae98fd927d
      US2004HVM: ami-009309b93e46c63ea
      US2204HVM: ami-0ec611155595f4be3
      CENTOS7HVM: ami-08998a9a61da37c77
      SLES15HVM: ami-0c61d9bf4e84dd26a
    eu-south-1:
      AMZNLINUX2: ami-0024dc61bc2f3d60f
      AMZNLINUX2ARM: ami-0a22f021423f78fac
      US2004HVM: ami-0d3bc945163bd2580
      US2204HVM: ami-0be8a0321a0db3412
      CENTOS7HVM: ami-0ce6f8b3dbadf3b41
      SLES15HVM: ami-0324f5c2cb963f12b
    eu-west-1:
      AMZNLINUX2: ami-0af7a5885e3ff0439
      AMZNLINUX2ARM: ami-0b176a5a5861ebc54
      US2004HVM: ami-052ed0ea33bec8c6b
      US2204HVM: ami-099b1e41f3043ce3a
      CENTOS7HVM: ami-0c1f3a8058fde8814
      SLES15HVM: ami-0688ec3cb81e58545
    eu-west-2:
      AMZNLINUX2: ami-023665fdad063c8a9
      AMZNLINUX2ARM: ami-0a4e06ccf954131db
      US2004HVM: ami-0784ce9cd4633006d
      US2204HVM: ami-09b93cc9c91e4ee20
      CENTOS7HVM: ami-036e229aa5fa198ba
      SLES15HVM: ami-09dc0d3735677ec06
    eu-west-3:
      AMZNLINUX2: ami-0eeba548a1a39b254
      AMZNLINUX2ARM: ami-062a280d33d9946fb
      US2004HVM: ami-05d91095ca9ecd4b8
      US2204HVM: ami-0df781a928bcfa894
      CENTOS7HVM: ami-0eb3117f2ccc34ba6
      SLES15HVM: ami-055d9fcbed9687d9f
    me-south-1:
      AMZNLINUX2: ami-02f339e26fdbed7a9
      AMZNLINUX2ARM: ami-014651e8b9c2f2761
      US2004HVM: ami-0ff686d9d37b13478
      US2204HVM: ami-0fb21a99ac31901ff
      CENTOS7HVM: ami-03a968cc818f19908
      SLES15HVM: ami-01517fccda7ee908a
    sa-east-1:
      AMZNLINUX2: ami-0e41adb6f66146d4f
      AMZNLINUX2ARM: ami-09aab169c697f2e3d
      US2004HVM: ami-0e2490ac81f48eebd
      US2204HVM: ami-024ce26284250a98d
      CENTOS7HVM: ami-04384c010169ed8d3
      SLES15HVM: ami-0964ddd286e7d4a4f
    us-east-1:
      AMZNLINUX2: ami-0464d49b8794eba32
      AMZNLINUX2ARM: ami-04a6f3599c6eb1807
      US2004HVM: ami-0c1704bac156af62c
      US2204HVM: ami-0f01974d5fd3b4530
      CENTOS7HVM: ami-002070d43b0a4f171
      SLES15HVM: ami-08199c714a509d3bc
    us-east-2:
      AMZNLINUX2: ami-058d017bb0407da05
      AMZNLINUX2ARM: ami-08f1b667d4bd99bd1
      US2004HVM: ami-0a23d90349664c6ee
      US2204HVM: ami-0e8c23bb05ff67981
      CENTOS7HVM: ami-05a36e1502605b4aa
      SLES15HVM: ami-013d257c3198b3759
    us-west-1:
      AMZNLINUX2: ami-0147bd0a180d521bd
      AMZNLINUX2ARM: ami-0d136891f78c60a5c
      US2004HVM: ami-0f42d9714d85eeb8b
      US2204HVM: ami-02eb3900fbce205c7
      CENTOS7HVM: ami-0dee0f906cf114191
      SLES15HVM: ami-0d36c27f11154fad6
    us-west-2:
      AMZNLINUX2: ami-0620766f9d10d6c9e
      AMZNLINUX2ARM: ami-064a912028208d6fc
      US2004HVM: ami-07eeacb3005b9beae
      US2204HVM: ami-08df94af6199f15b6
      CENTOS7HVM: ami-08c191625cfb7ee61
      SLES15HVM: ami-0bfb58754b8025d15
    us-gov-east-1:
      AMZNLINUX2: ami-08f6a78ac6ba2f22d
      AMZNLINUX2ARM: ami-08261b2bb73791aea
      US2004HVM: ami-dee008af
      US2204HVM: ami-0efd49eddc5639cc5
      CENTOS7HVM: ami-0c2bbe6caaa14e7df
      SLES15HVM: ami-0c49e39cbc98483b4
    us-gov-west-1:
      AMZNLINUX2: ami-0e91042926e4f40b3
      AMZNLINUX2ARM: ami-0d7338be083c025a5
      US2004HVM: ami-84556de5
      US2204HVM: ami-061efa908c09c5409
      CENTOS7HVM: ami-010d0f12d80fa611d
      SLES15HVM: ami-0602869f1391f1ba3
    cn-north-1:
      AMZNLINUX2: ami-06522dd1412c676af
      AMZNLINUX2ARM: ami-003a4ad3c32f09b30
      US2004HVM: ami-0ee7de898385f3816
      US2204HVM: ami-066463ec4673de53b
      CENTOS7HVM: ami-0ada9814c117aab50
      SLES15HVM: ami-07563af55cf2eb31d
    cn-northwest-1:
      AMZNLINUX2: ami-0ecad0669c7a82721
      AMZNLINUX2ARM: ami-07bf03e19eda28948
      US2004HVM: ami-08e0c0a54f075c9bc
      US2204HVM: ami-020ce060d4778563b
      CENTOS7HVM: ami-0ff6464d94d72e7cf
      SLES15HVM: ami-019b04518c072a050
  LinuxAMINameMap:
    Amazon-Linux2-HVM:
      Code: AMZNLINUX2
      OS: Amazon
    Amazon-Linux2-HVM-ARM:
      Code: AMZNLINUX2ARM
      OS: Amazon
    CentOS-7-HVM:
      Code: CENTOS7HVM
      OS: CentOS
    Ubuntu-Server-20.04-LTS-HVM:
      Code: US2004HVM
      OS: Ubuntu
    Ubuntu-Server-22.04-LTS-HVM:
      Code: US2204HVM
      OS: Ubuntu
    SUSE-SLES-15-HVM:
      Code: SLES15HVM
      OS: SLES
Conditions:
  RolePathProvided: !Not [!Equals ['', !Ref RolePath]]
  PermissionsBoundaryProvided: !Not [!Equals ['', !Ref PermissionsBoundaryArn]]
  2BastionConditionHost: !Or [!Equals [!Ref NumBastionHosts, 2], !Condition 3BastionCondition, !Condition 4BastionCondition]
  3BastionConditionHost: !Or [!Equals [!Ref NumBastionHosts, 3], !Condition 4BastionCondition]
  4BastionConditionHost: !Equals [!Ref NumBastionHosts, 4]
  2BastionCondition: !And [!Condition PopulateRemoteCIDR, !Condition 2BastionConditionHost]
  3BastionCondition: !And [!Condition PopulateRemoteCIDR, !Condition 3BastionConditionHost]
  4BastionCondition: !And [!Condition PopulateRemoteCIDR, !Condition 4BastionConditionHost]
  PopulateRemoteCIDR: !Not [!Equals [!Ref RemoteAccessCIDR, disabled-onlyssmaccess]]
  UseAlternativeInitialization: !Not [!Equals [!Ref AlternativeInitializationScript, '']]
  CreateIAMRole: !Equals [!Ref AlternativeIAMRole, '']
  UseOSImageOverride: !Not [!Equals [!Ref OSImageOverride, '']]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]
  DefaultBanner: !Equals [!Ref BastionBanner, '']
  UseKeyPair: !Not [!Equals [!Ref KeyPairName, '']]
Resources:
  BastionMainLogGroup:
    Type: AWS::Logs::LogGroup
  SSHMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BastionMainLogGroup
      FilterPattern: ON FROM USER PWD
      MetricTransformations:
        - MetricName: SSHCommandCount
          MetricValue: 1
          MetricNamespace: !Sub AWSQuickStart/${AWS::StackName}
  BastionHostRole:
    Condition: CreateIAMRole
    Type: AWS::IAM::Role
    Properties:
      Path: !If [RolePathProvided, !Ref RolePath, !Ref AWS::NoValue]
      PermissionsBoundary:
        !If [PermissionsBoundaryProvided, !Ref PermissionsBoundaryArn, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - !Sub ec2.${AWS::URLSuffix}
            Effect: Allow
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy
  BastionHostPolicy:
    Type: AWS::IAM::Policy
    Condition: CreateIAMRole
    Properties:
      PolicyName: BastionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:GetObject
            Resource: !Sub
              - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
            Effect: Allow
          - Action:
              - logs:CreateLogStream
              - logs:GetLogEvents
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutRetentionPolicy
              - logs:PutMetricFilter
              - logs:CreateLogGroup
            Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*
            Effect: Allow
          - Action:
              - ec2:DescribeAddresses
            Resource: '*'
            Effect: Allow
          - Effect: Allow
            Action:
              - ec2:AssociateAddress
            Resource: '*'
            Condition:
              StringEquals:
                ec2:ResourceTag/aws:cloudformation:stack-id: !Ref AWS::StackId
      Roles:
        - !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
  BastionHostProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
      Path: !If [CreateIAMRole, /, /account-managed/]
  EIP1:
    Type: AWS::EC2::EIP
    Condition: PopulateRemoteCIDR
    Properties:
      Domain: vpc
  EIP2:
    Type: AWS::EC2::EIP
    Condition: 2BastionCondition
    Properties:
      Domain: vpc
  EIP3:
    Type: AWS::EC2::EIP
    Condition: 3BastionCondition
    Properties:
      Domain: vpc
  EIP4:
    Type: AWS::EC2::EIP
    Condition: 4BastionCondition
    Properties:
      Domain: vpc
  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      VPCZoneIdentifier:
        - !Ref PublicSubnet1ID
        - !Ref PublicSubnet2ID
      MinSize: !Ref NumBastionHosts
      MaxSize: !Ref NumBastionHosts
      Cooldown: 900
      DesiredCapacity: !Ref NumBastionHosts
      Tags:
        - Key: Name
          Value: !Ref BastionHostName
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumBastionHosts
        Timeout: PT60M
      AutoScalingCreationPolicy:
        MinSuccessfulInstancesPercent: 100
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
          buckets:
            - !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/auditd.rules:
              mode: 000550
              owner: root
              group: root
              content: |
                -a exit,always -F arch=b64 -S execve
                -a exit,always -F arch=b32 -S execve
            /tmp/auditing_configure.sh:
              source: !Sub
                - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/auditing_configure.sh
                - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                  S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              mode: 000550
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/bastion_bootstrap.sh:
              source: !If
                - UseAlternativeInitialization
                - !Ref AlternativeInitializationScript
                - !Sub
                  - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh
                  - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                    S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              mode: 000550
              owner: root
              group: root
              authentication: S3AccessCreds
          commands:
            a-add_auditd_rules:
              cwd: /tmp/
              env:
                BASTION_OS: !FindInMap [LinuxAMINameMap, !Ref BastionAMIOS, OS]
              command: ./auditing_configure.sh
            b-bootstrap:
              cwd: /tmp/
              env:
                REGION: !Sub ${AWS::Region}
                URL_SUFFIX: !Sub ${AWS::URLSuffix}
                BANNER_REGION: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
              command: !Sub
                - ./bastion_bootstrap.sh --banner ${BannerUrl} --enable ${EnableBanner} --tcp-forwarding ${EnableTCPForwarding} --x11-forwarding ${EnableX11Forwarding}
                - BannerUrl: !If
                    - DefaultBanner
                    - !Sub
                      - s3://${S3Bucket}/${QSS3KeyPrefix}scripts/banner_message.txt
                      - S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
                    - !Ref BastionBanner
    Properties:
      AssociatePublicIpAddress: true
      PlacementTenancy: !Ref BastionTenancy
      KeyName: !If [UseKeyPair, !Ref KeyPairName, !Ref AWS::NoValue]
      IamInstanceProfile: !Ref BastionHostProfile
      ImageId: !If
        - UseOSImageOverride
        - !Ref OSImageOverride
        - !FindInMap [AWSAMIRegionMap, !Ref AWS::Region, !FindInMap [LinuxAMINameMap, !Ref BastionAMIOS, Code]]
      SecurityGroups:
        - !Ref BastionSecurityGroup
      InstanceType: !Ref BastionInstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref RootVolumeSize
            VolumeType: gp2
            Encrypted: true
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash
            set -x
            for e in $(echo "${EnvironmentVariables}" | tr ',' ' '); do
              export $e
              echo "$e" >> /root/.bashrc
            done
            export PATH=$PATH:/usr/local/bin
            #cfn signaling functions
            yum install git -y || apt-get install -y git unzip || zypper -n install git

            cfn_fail() {
              cfn-signal -e 1 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup
              exit 1
            }

            cfn_success() {
              cfn-signal -e 0 --stack ${AWS::StackName} --region ${AWS::Region} --resource BastionAutoScalingGroup
              exit 0
            }

            pushd /tmp

            if [[ "a$(which aws)" == "a" ]]
            then
              echo "Installing AWS CLI..."
              uname=$(uname -m)
              wget -O "./awscliv2.zip" "https://awscli.amazonaws.com/awscli-exe-linux-$uname.zip"
              unzip ./awscliv2.zip
              ./aws/install
            fi

            until aws s3 cp --no-progress "s3://${S3Bucket}/${QSS3KeyPrefix}scripts/cfn-tools.sh" .
            do
              echo "Retrying..."
            done
            source ./cfn-tools.sh

            popd /tmp

            qs_update-os || qs_err;
            qs_bootstrap_pip || qs_err " pip bootstrap failed ";
            qs_aws-cfn-bootstrap || qs_err " cfn bootstrap failed ";

            EIP_LIST="${EIP1},${EIP2},${EIP3},${EIP4}"
            CLOUDWATCHGROUP=${BastionMainLogGroup}
            cfn-init -v --stack '${AWS::StackName}' --resource BastionLaunchConfiguration --region ${AWS::Region} || cfn_fail
            [ $(qs_status) == 0 ] && cfn_success || cfn_fail
          - EIP1: !If [PopulateRemoteCIDR, !Ref EIP1, 'Null']
            EIP2: !If [2BastionCondition, !Ref EIP2, 'Null']
            EIP3: !If [3BastionCondition, !Ref EIP3, 'Null']
            EIP4: !If [4BastionCondition, !Ref EIP4, 'Null']
            S3Bucket: !If [UsingDefaultBucket, !Sub 'aws-quickstart-${AWS::Region}', !Ref QSS3BucketName]
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH Access to Bastion Hosts
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        !If
          - PopulateRemoteCIDR
          -
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: !Ref RemoteAccessCIDR
            - IpProtocol: icmp
              FromPort: -1
              ToPort: -1
              CidrIp: !Ref RemoteAccessCIDR
          - !Ref AWS::NoValue
Outputs:
  BastionAutoScalingGroup:
    Description: Auto Scaling group reference ID.
    Value: !Ref BastionAutoScalingGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionAutoScalingGroup
  EIP1:
    Condition: PopulateRemoteCIDR
    Description: Elastic IP 1 for bastion.
    Value: !Ref EIP1
    Export:
      Name: !Sub ${AWS::StackName}-EIP1
  EIP2:
    Condition: 2BastionCondition
    Description: Elastic IP 2 for bastion.
    Value: !Ref EIP2
    Export:
      Name: !Sub ${AWS::StackName}-EIP2
  EIP3:
    Condition: 3BastionCondition
    Description: Elastic IP 3 for bastion.
    Value: !Ref EIP3
    Export:
      Name: !Sub ${AWS::StackName}-EIP3
  EIP4:
    Condition: 4BastionCondition
    Description: Elastic IP 4 for bastion.
    Value: !Ref EIP4
    Export:
      Name: !Sub ${AWS::StackName}-EIP4
  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref BastionMainLogGroup
    Export:
      Name: !Sub ${AWS::StackName}-CloudWatchLogs
  BastionSecurityGroupID:
    Description: Bastion security group ID.
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionSecurityGroupID
  BastionHostRole:
    Description: Bastion IAM role name.
    Value: !If [CreateIAMRole, !Ref BastionHostRole, !Ref AlternativeIAMRole]
    Export:
      Name: !Sub ${AWS::StackName}-BastionHostRole
  Postdeployment:
    Description: See the deployment guide for post-deployment steps.
    Value: https://fwd.aws/YqpXk?
